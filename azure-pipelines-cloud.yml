trigger:
- main

variables:
  system.debug: true
  imageRepository: 'devops-ci-cd'
  tag: '$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Dev
  displayName: Dev
  jobs:
  - job: CI
    displayName: CI
    steps:
    - checkout: self
      fetchDepth: 0
    
    - task: CmdLine@2
      displayName: Install Trivy
      inputs:
        script: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
    - task: SonarCloudPrepare@3
      inputs:
        SonarQube: 'svc-sonarcloud'
        organization: 'juniorramos0015'
        scannerMode: 'cli'
        configMode: 'manual'
        cliProjectKey: 'juniorramos0015_DevOps-CI-CD-Amazon-Prime-Clone-Project'
        cliProjectName: 'DevOps CI-CD Amazon Prime Clone Project'
        cliSources: '.'
    - task: SonarCloudAnalyze@3
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
    - task: SonarCloudPublish@3
      inputs:
        pollingTimeoutSec: '300'

    
    - task: Docker@2
      displayName: Docker Login
      inputs:
        containerRegistry: 'svc-acr'
        command: 'login'

    - task: Docker@2
      displayName: Build the Image
      inputs:
        containerRegistry: 'svc-acr'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: './Dockerfile'
        tags: '$(tag)'
    
    - task: CmdLine@2
      displayName: Run Trivy
      inputs:
        script: 'trivy image --severity HIGH,CRITICAL --format template --template "@template/junit.tpl" -o junit-report-high-crit.xml acrprojeto.azurecr.io/devops-ci-cd:$(tag)'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/junit-report-high-crit.xml'
        mergeTestResults: true
        failTaskOnFailedTests: false
        testRunTitle: 'Trivy - Low and Medium Vulnerabilities'
      condition: 'always()'
    - task: Docker@2
      displayName: Docker Push
      inputs:
        containerRegistry: 'svc-acr'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'
  
    - task: trivy@1
      inputs:
        version: 'latest'
        debug: true
        loginDockerConfig: true
        image: 'acrprojeto.azurecr.io/devops-ci-cd:$(tag)'
        exitCode: '0'